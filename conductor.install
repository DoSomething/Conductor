<?php

/**
 * Implements hook_schema().
 */
function conductor_schema() {
  $schema['conductor_workflow'] = array(
    'description' => 'Stores the general data for a view.',
    'export' => array(
      'identifier' => 'workflow',
      'bulk export' => TRUE,
      'primary key' => 'wid',
      'key' => 'name',
      'default hook' => 'default_conductor_workflows',
      'admin_title' => 'human_name',
      'admin_description' => 'description',
      'api' => array(
        'owner' => 'conductor',
        'api' => 'conductor',
        'minimum_version' => '0',
        'current_version' => '1.0',
      ),
      'object' => 'ConductorWorkflow',
      // the variable that holds enabled/disabled status
      'status' => 'conductor_workflows_defaults',
      'create callback' => 'conductor_new_workflow',
      'save callback' => 'conductor_save_workflow',
      'load callback' => 'conductor_load_workflow',
      'delete callback' => 'conductor_delete_workflow',
      'export callback' => 'conductor_export_workflow',
      //'cache defaults' => TRUE,
      //'default cache bin' => 'cache_conductor_data',
    ),
    'fields' => array(
      'wid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The workflow ID of the field, defined by the database.',
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '32',
        'default' => '',
        'not null' => TRUE,
        'description' => 'The unique name of the workflow. This is the primary field workflows are loaded from, and is used so that workflows may be internal and not necessarily in the database. May only be alphanumeric characters plus underscores.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '32',
        'default' => '',
        'not null' => TRUE,
        'description' => 'The human readable name of the workflow.',
      ),
      'description' => array(
        'type' => 'varchar',
        'length' => '255',
        'default' => '',
        'description' => 'A description of the workflow for the admin interface.',
      ),
      'activities' => array(
        // Type corrected in update 6009
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized representation of this workflow.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
        'no export' => TRUE,
      ),
    ),
    'primary key' => array('wid'),
    'unique keys' => array('name' => array('name')),
  );
  $schema['cache_conductor_data'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_conductor_data']['description'] = 'Cache table for conductor to store pre-rendered queries, results, and display output.';
  $schema['cache_conductor_data']['fields']['serialized']['default'] = 1;
  /*
  // TODO: What do we want to call this stuff?
  $schema['conductor_instance'] = array(
  );
  */
  $schema['conductor_state'] = array(
    'description' => '',
    'fields' => array(
      'workflow_name' => array(
        'type' => 'varchar',
        'length' => '32',
        'default' => '',
        'not null' => TRUE,
        'description' => 'The unique name of the workflow. This is the primary field workflows are loaded from, and is used so that workflows may be internal and not necessarily in the database. May only be alphanumeric characters plus underscores.',
      ),
      'data' => array(
        // Type corrected in update 6009
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized representation of this workflow preventing the workflow of this item from changing.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
      ),
      'sid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The workflow instance state ID of the field, defined by the database.',
        'no export' => TRUE,
      ),
    ),
    'primary key' => array('sid'),
  );
  $schema['conductor_state_item'] = array(
    'description' => '',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => '',
        'no export' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
